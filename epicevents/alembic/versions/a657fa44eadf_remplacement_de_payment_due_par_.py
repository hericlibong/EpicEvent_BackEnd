"""Remplacement de payment_due par remaining_payment

Revision ID: a657fa44eadf
Revises: f5b8655c2b87
Create Date: 2024-11-15 14:25:45.718176

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a657fa44eadf'
down_revision: Union[str, None] = 'f5b8655c2b87'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('contracts', sa.Column('remaining_amount', sa.Float(), nullable=True))

    # Initialiser les données dans 'remaining_amount' avec les valeurs de 'amount'
    op.execute("UPDATE contracts SET remaining_amount = amount")

    # Rendre la colonne 'remaining_amount' non-nullable
    op.alter_column('contracts', 'remaining_amount', existing_type=sa.FLOAT(), nullable=False)

    op.drop_column('contracts', 'payment_due')
    # ### end Alembic commands ###


def downgrade() -> None:
    # Ajouter de nouveau la colonne `payment_due` (pour le rollback)
    op.add_column('contracts', sa.Column('payment_due', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    
    # Initialiser les données dans `payment_due` avec une valeur par défaut
    op.execute('UPDATE contracts SET payment_due = NOW()')  # Exemple d'initialisation
    
    # Supprimer la colonne `remaining_amount`
    op.drop_column('contracts', 'remaining_amount')
