"""Suppress Role model and associated reference

Revision ID: f5b8655c2b87
Revises: 500e883f5174
Create Date: 2024-11-13 19:32:02.848326

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f5b8655c2b87'
down_revision: Union[str, None] = '500e883f5174'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # 1. Mettre à jour les enregistrements pour que department_id ne soit plus NULL
    op.execute("""
        UPDATE users SET department_id = 1 WHERE department_id IS NULL;
    """)

    # 2. Rendre la colonne department_id non nulle
    op.alter_column('users', 'department_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    # 3. Supprimer la contrainte de clé étrangère fk_users_role_id
    op.drop_constraint('fk_users_role_id', 'users', type_='foreignkey')

    # 4. Supprimer la colonne role_id de la table users
    op.drop_column('users', 'role_id')

    # 5. Supprimer les index sur la table roles
    op.drop_index('ix_roles_name', table_name='roles')
    op.drop_index('ix_roles_id', table_name='roles')

    # 6. Supprimer la table roles
    op.drop_table('roles')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # 1. Recréer la table roles
    op.create_table('roles',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint('id', name='roles_pkey')
    )

    # 2. Recréer les index sur la table roles
    op.create_index('ix_roles_name', 'roles', ['name'], unique=True)
    op.create_index('ix_roles_id', 'roles', ['id'], unique=False)

    # 3. Ajouter la colonne role_id à la table users
    op.add_column('users', sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False))

    # 4. Recréer la contrainte de clé étrangère fk_users_role_id
    op.create_foreign_key('fk_users_role_id', 'users', 'roles', ['role_id'], ['id'])

    # 5. Rendre la colonne department_id nullable si nécessaire
    op.alter_column('users', 'department_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    # ### end Alembic commands ###
